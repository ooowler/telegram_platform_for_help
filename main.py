import aiogram
from aiogram import types
from aiogram.dispatcher.filters import state
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.utils.callback_data import CallbackData
from aiogram.utils.exceptions import MessageNotModified
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
import aiogram.utils.markdown as md

import asyncio
import functools
import itertools
import logging
import time
import typing

import aiohttp
from aiohttp.helpers import sentinel
storage= MemoryStorage()
Bot = aiogram.Bot
dp = aiogram.Dispatcher(bot, storage=storage)

select_subjects_keyboard_add =  InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(text="#–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", callback_data="add_math"),
        InlineKeyboardButton(text="#—Ñ–∏–∑–∏–∫–∞", callback_data="add_phis"),
        InlineKeyboardButton(text="#–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data="add_proga"),
        InlineKeyboardButton(text="#–û–ü–î", callback_data="add_OPD"),
        InlineKeyboardButton(text="#–¥–∏—Å–∫—Ä–µ—Ç–∫–∞", callback_data="add_discr"),
        InlineKeyboardButton(text="#–∞–Ω–≥–ª–∏–π—Å–∫–∏–π", callback_data="add_eng"),
        InlineKeyboardButton(text="#—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è", callback_data="add_filosof"),
        InlineKeyboardButton(text="#–•–û–î", callback_data="add_XOD"),
        InlineKeyboardButton(text="#–ø—Ä–æ—á–µ–µ", callback_data="add_another"),
)
select_subjects_keyboard_remove =  InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(text="#–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞", callback_data="remove_math"),
        InlineKeyboardButton(text="#—Ñ–∏–∑–∏–∫–∞", callback_data="remove_phis"),
        InlineKeyboardButton(text="#–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data="remove_proga"),
        InlineKeyboardButton(text="#–û–ü–î", callback_data="remove_OPD"),
        InlineKeyboardButton(text="#–¥–∏—Å–∫—Ä–µ—Ç–∫–∞", callback_data="remove_discr"),
        InlineKeyboardButton(text="#–∞–Ω–≥–ª–∏–π—Å–∫–∏–π", callback_data="remove_eng"),
        InlineKeyboardButton(text="#—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è", callback_data="remove_filosof"),
        InlineKeyboardButton(text="#–•–û–î", callback_data="remove_XOD"),
        InlineKeyboardButton(text="#–ø—Ä–æ—á–µ–µ", callback_data="remove_another"),
)
settings_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
temp_button_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
subjects_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True)
button_main_menu = types.KeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é")
button_start = types.KeyboardButton('–ü–æ–µ—Ö–∞–ª–∏ üíñüíñüíñ')
keyboard.add(button_start)
settings_button = ["–¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ","—É–¥–∞–ª–∏—Ç—å —Ç–µ–≥–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö","—Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫","–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
settings_keyboard.add(*settings_button)
buttons = ['–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞—è–≤–∫–∏', '–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏']
temp_button_keyboard.add(*buttons)
subjects_buttons = ["#–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞","#—Ñ–∏–∑–∏–∫–∞","#–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
                    "#–û–ü–î","#–¥–∏—Å–∫—Ä–µ—Ç–∫–∞","#–∞–Ω–≥–ª–∏–π—Å–∫–∏–π",
                    "#—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è","#–•–û–î","#–ø—Ä–æ—á–µ–µ"]
subjects_keyboard.add(*subjects_buttons)

class Form(StatesGroup):
    tag = State()
    title = State()
    text = State()


mas=[]

@dp.message_handler(commands=['start'])
async def start(message: aiogram.types.Message):
    name = message.from_user.first_name
    await message.answer('–ü—Ä–∏–≤–µ—Ç, ' + name + "!" + '\n' + "–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º!" + "\n" + '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, —Ç–æ –≤–≤–µ–¥–∏ /help', reply_markup=keyboard)

    @dp.message_handler(commands=['help'])
    async def start(message: aiogram.types.Message):
        await message.reply('–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:' '\n' + '–ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é: /menu')



    @dp.message_handler(text=['–ü–æ–µ—Ö–∞–ª–∏ üíñüíñüíñ', '–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
    async def main_menu(message: aiogram.types.message):
        await message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å–≤—Ç–∏–µ", reply_markup=temp_button_keyboard)


        @dp.callback_query_handler(text="Start")
        async def start_callback(query: CallbackQuery):
            await query.message.edit_text(text="–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
            await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=temp_button_keyboard)

        @dp.message_handler(text='–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É')
        async def cmd_start(message: types.Message):
            await Form.tag.set()
            await message.answer("–í—ã–±–∏—Ä–∞–π —Ç–µ–≥!", reply_markup=subjects_keyboard)


        @dp.message_handler(lambda message: (not message.text == "#–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞"
                                             and not message.text == "#—Ñ–∏–∑–∏–∫–∞"
                                             and not message.text == "#–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"
                                             and not message.text == "#–û–ü–î"
                                             and not message.text == "#–¥–∏—Å–∫—Ä–µ—Ç–∫–∞"
                                             and not message.text == "#–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"
                                             and not message.text == "#—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è"
                                             and not message.text == "#–•–û–î"
                                             and not message.text == "#–ø—Ä–æ—á–µ–µ"),state=Form.tag)
        async def process_tag_invalid(message: types.Message):
            return await message.reply("–ò—Å–ø–æ–ª—å–∑—É–π —Ç–µ–≥–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –Ω–µ –∂—É–ª—å–Ω–∏—á–∞–π!.\n –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑!",
                                       reply_markup=subjects_keyboard)

        @dp.message_handler(state=Form.tag)
        async def process_name(message: types.Message, state: FSMContext):
            async with state.proxy() as data:
                data['tag'] = message.text
            await Form.next()
            await message.answer("–ö–∞–∫–æ–µ –±—É–¥–µ—Ç –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ?")

        @dp.message_handler(state=Form.title)
        async def process_age(message: types.Message, state: FSMContext):
            async with state.proxy() as data:
                data['title'] = message.text
            await Form.next()
            await message.answer("–ê —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏ —É–∫–∞–∂–µ—à—å?")

        @dp.message_handler(state=Form.text)
        async def process_age(message: types.Message, state: FSMContext):
            async with state.proxy() as data:
                data['text'] = message.text
            await Form.next()
            await message.answer("–ú–æ–ª–æ–¥–µ—Ü, –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!", reply_markup=temp_button_keyboard)

            print(md.text("my tag", md.bold(data['tag'])),
                  md.text("my title", md.bold(data['title'])),
                  md.text("my text", md.bold(data['text'])), sep="\n")

        @dp.message_handler(text='–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞—è–≤–∫–∏')
        async def main_menu(message: aiogram.types.message):
            await message.answer("–ù–µ –ø–æ–∫–∞–∂—É –∑–∞—è–≤–∫–∏", reply_markup=temp_button_keyboard)

        @dp.message_handler(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
        async def main_menu(message: aiogram.types.message):
            await message.answer("–í—ã–±–µ—Ä–∏ –¥–µ–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å–≤—Ç–∏–µ", reply_markup=settings_keyboard)
##+++   ADD SUBJECTS
            @dp.callback_query_handler(text=["add_math"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                print("–¥–æ–±–∞–≤–∏–ª–∏ #–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_add)

            @dp.callback_query_handler(text=["add_phis"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#—Ñ–∏–∑–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                print("–¥–æ–±–∞–≤–∏–ª–∏ #—Ñ–∏–∑–∏–∫–∞")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_add)

            @dp.callback_query_handler(text=["add_proga"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                print("–¥–æ–±–∞–≤–∏–ª–∏ #–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_add)

            @dp.callback_query_handler(text=["add_OPD"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–û–ü–î –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                print("–¥–æ–±–∞–≤–∏–ª–∏ #–û–ü–î")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_add)

            @dp.callback_query_handler(text=["add_discr"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–¥–∏—Å–∫—Ä–µ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                print("–¥–æ–±–∞–≤–∏–ª–∏ #–¥–∏—Å–∫—Ä–µ—Ç–∫–∞")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_add)

            @dp.callback_query_handler(text=["add_eng"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                print("–¥–æ–±–∞–≤–∏–ª–∏ #–∞–Ω–≥–ª–∏–π—Å–∫–∏–π")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_add)

            @dp.callback_query_handler(text=["add_filosof"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                print("–¥–æ–±–∞–≤–∏–ª–∏ #—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_add)

            @dp.callback_query_handler(text=["add_XOD"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–•–û–î –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                print("–¥–æ–±–∞–≤–∏–ª–∏ #–•–û–î")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_add)

            @dp.callback_query_handler(text=["add_another"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–ø—Ä–æ—á–µ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                print("–¥–æ–±–∞–≤–∏–ª–∏ #–ø—Ä–æ—á–µ–µ")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_add)
##---   ADD SUBJECTS

##+++   REMOVE SUBJECTS
            @dp.callback_query_handler(text=["remove_math"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∞!")
                print("—É–¥–∞–ª–∏–ª–∏ #–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_remove)

            @dp.callback_query_handler(text=["remove_phis"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#—Ñ–∏–∑–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∞!")
                print("—É–¥–∞–ª–∏–ª–∏ #—Ñ–∏–∑–∏–∫–∞")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_remove)

            @dp.callback_query_handler(text=["remove_proga"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∞!")
                print("—É–¥–∞–ª–∏–ª–∏ #–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_remove)

            @dp.callback_query_handler(text=["remove_OPD"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–û–ü–î —É–¥–∞–ª–µ–Ω–∞!")
                print("—É–¥–∞–ª–∏–ª–∏ #–û–ü–î")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_remove)

            @dp.callback_query_handler(text=["remove_discr"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–¥–∏—Å–∫—Ä–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞!")
                print("—É–¥–∞–ª–∏–ª–∏ #–¥–∏—Å–∫—Ä–µ—Ç–∫–∞")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_remove)

            @dp.callback_query_handler(text=["remove_eng"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–∞–Ω–≥–ª–∏–π—Å–∫–∏–π —É–¥–∞–ª–µ–Ω–∞!")
                print("—É–¥–∞–ª–∏–ª–∏ #–∞–Ω–≥–ª–∏–π—Å–∫–∏–π")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_remove)

            @dp.callback_query_handler(text=["remove_filosof"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è —É–¥–∞–ª–µ–Ω–∞!")
                print("—É–¥–∞–ª–∏–ª–∏ #—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_remove)

            @dp.callback_query_handler(text=["remove_XOD"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–•–û–î —É–¥–∞–ª–µ–Ω–∞!")
                print("—É–¥–∞–ª–∏–ª–∏ #–•–û–î")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_remove)

            @dp.callback_query_handler(text=["remove_another"])
            async def start_callback(query: CallbackQuery):
                await query.message.edit_text(text="#–ø—Ä–æ—á–µ–µ —É–¥–∞–ª–µ–Ω–∞!")
                print("—É–¥–∞–ª–∏–ª–∏ #–ø—Ä–æ—á–µ–µ")
                await query.message.answer("–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=select_subjects_keyboard_remove)


##---   REMOVE SUBJECTS

            @dp.message_handler(text='–¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
            async def main_menu(message: aiogram.types.message):
                await message.answer("–î–æ–±–∞–≤—å —Ç–µ–≥–∏ –≤ –ª—é–±–∏–º—ã–µ!", reply_markup=select_subjects_keyboard_add)

            @dp.message_handler(text='—É–¥–∞–ª–∏—Ç—å —Ç–µ–≥–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö')
            async def main_menu(message: aiogram.types.message):
                await message.answer("–£–±–µ—Ä–∏ —Ç–µ–≥–∏ –∏–∑ –ª—é–±–∏–º—ã—Ö!", reply_markup=select_subjects_keyboard_remove)





            @dp.message_handler(text='—Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫')
            async def main_menu(message: aiogram.types.message):
                await message.answer("–í—ã–≤–æ–¥ —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫")







if __name__ == "__main__":
    aiogram.executor.start_polling(dp, skip_updates=True)